@model WebApplicationDataRead.Context.EmployeeTable
    @using WebApplicationDataRead.Context;

@{
    ViewBag.Title = "Create Employee";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create Employee</h2>

@using (Html.BeginForm("EmployeeInfoSend", "Employee",FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)

    <div class="form-group">
        @Html.LabelFor(x => x.Name, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.JoingDate, htmlAttributes: new { @class = "control-label" })
        @*@Html.TextBoxFor(x => x.JoingDate, new { @class = "form-control", type = "date"})*@
        @Html.EditorFor(x => x.JoingDate,"", new { htmlAttributes = new { @class = "form-control" } })
        @*@if (ViewBag.NoDate == 0)
        {
            @Html.EditorFor(x => x.JoingDate, "", new { htmlAttributes = new { @class = "form-control" } })
        }
        else
        {
            @Html.EditorFor(x => x.JoingDate, "", new { htmlAttributes = new { @Value = Model.JoingDate?.ToString("yyyy-MM-dd"), @class = "form-control", type = "date" } })
        }*@
        @Html.ValidationMessageFor(x => x.JoingDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Email, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(x => x.Email, new { @class = "form-control", type = "email" })
        @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Call, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(x => x.Call, new { @class = "form-control", type = "tel" })
        @Html.ValidationMessageFor(x => x.Call, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Salay, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(x => x.Salay, new { @class = "form-control", type = "number", step = "0.01" })
        @Html.ValidationMessageFor(x => x.Salay, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.designation, htmlAttributes: new { @class = "control-label" })
        @*@Html.TextBoxFor(x => x.designation, new { @class = "form-control" })*@
        @Html.DropDownListFor(x => x.designation, new SelectList(Enum.GetValues(typeof(EmployeeType))),"--Selest--", new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.designation, "", new { @class = "text-danger" })
    </div>
    <br
    <div class="form-group">
        <input type="submit" value="Submit" class="btn btn-primary" />
    </div>
}
