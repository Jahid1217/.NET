//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplicationStudentSystem.Context
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class StudentsInformation
    {
        public int Id { get; set; }
        [Required]
        [StringLength(50)]
        [Display(Name = "First Name")]
        [MinLength(3, ErrorMessage = "First Name must be at least 3 characters long.")]
        public string FirstName { get; set; }
        [Required(ErrorMessage = "Last name is required")]
        [Display(Name = "Last Name")]
        [MinLength(3, ErrorMessage = "Last Name must be at least 3 characters long.")]
        [StringLength(50)]
        public string LastName { get; set; }
        [Required(ErrorMessage = "Date of birth is required")]
        [Display(Name = "Date of Birth")]
        [DataType(DataType.Date)]
        public System.DateTime DOB { get; set; }
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email address")]
        [Display(Name = "Email Address")]
        public string Email { get; set; }
        [Required(ErrorMessage = "Phone number is required")]
        [Display(Name = "Phone Number")]
        public string PhoneNumber { get; set; }
        [Required(ErrorMessage = "CGPA is required")]
        [Range(0.0, 4.0, ErrorMessage = "CGPA must be between 0.0 and 4.0")]
        [Display(Name = "CGPA")]
        public double CGPA { get; set; }
        [Required(ErrorMessage = "Blood group is required")]
        [Display(Name = "Blood Group")]
        public string BloodGroup { get; set; }
    }
   public enum BloodType
    {
        A_Positive,
        A_Negative,
        B_Positive,
        B_Negative,
        O_Positive,
        O_Negative,
        AB_Positive,
        AB_Negative
    };

}
